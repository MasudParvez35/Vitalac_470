@model StateProvinceModel

@{
    Layout = "_AdminPopupLayout";

    //page title
    ViewBag.PageTitle = T("Admin.Configuration.Countries.States.AddNew").Text;
}

@if (ViewBag.RefreshPage == true)
{
    <script>
        try { window.opener.document.forms['@(Context.Request.Query["formId"])'].@(Context.Request.Query["btnId"]).click(); }
        catch (e) { }
    </script>
    if (ViewBag.ClosePage == true)
    {
        <script>
            window.close();
        </script>
    }
}

<form asp-controller="Country" asp-action="StateCreatePopup"
      asp-route-countryId="@Context.Request.Query["countryId"]"
      asp-route-btnId="@Context.Request.Query["btnId"]"
      asp-route-formId="@Context.Request.Query["formId"]">
    <div class="content-header clearfix">
        <h1 class="float-left">
            @T("Admin.Configuration.Countries.States.AddNew")
        </h1>
        <div class="float-right">
            <button type="submit" name="save" class="btn btn-primary">
                <i class="far fa-save"></i>
                @T("Admin.Common.Save")
            </button>
            @await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = AdminWidgetZones.CountryStateDetailsButtons, additionalData = Model })
        </div>
    </div>
    @await Html.PartialAsync("_CreateOrUpdateState", Model)
</form>